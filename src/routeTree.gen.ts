/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthTransactionsImport } from './routes/_auth/transactions'
import { Route as AuthProfileImport } from './routes/_auth/profile'
import { Route as AuthPendingRequestsImport } from './routes/_auth/pending-requests'
import { Route as AuthNotificationsImport } from './routes/_auth/notifications'
import { Route as AuthLoansImport } from './routes/_auth/loans'
import { Route as AuthDepositsImport } from './routes/_auth/deposits'
import { Route as AuthDashboardImport } from './routes/_auth/dashboard'
import { Route as AuthLoansNewImport } from './routes/_auth/loans_.new'
import { Route as AuthLoansLoanIdImport } from './routes/_auth/loans_.$loanId'
import { Route as AuthLoansLoanIdStatementImport } from './routes/_auth/loans_.$loanId.statement'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthTransactionsRoute = AuthTransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPendingRequestsRoute = AuthPendingRequestsImport.update({
  id: '/pending-requests',
  path: '/pending-requests',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNotificationsRoute = AuthNotificationsImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoansRoute = AuthLoansImport.update({
  id: '/loans',
  path: '/loans',
  getParentRoute: () => AuthRoute,
} as any)

const AuthDepositsRoute = AuthDepositsImport.update({
  id: '/deposits',
  path: '/deposits',
  getParentRoute: () => AuthRoute,
} as any)

const AuthDashboardRoute = AuthDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoansNewRoute = AuthLoansNewImport.update({
  id: '/loans_/new',
  path: '/loans/new',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoansLoanIdRoute = AuthLoansLoanIdImport.update({
  id: '/loans_/$loanId',
  path: '/loans/$loanId',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoansLoanIdStatementRoute = AuthLoansLoanIdStatementImport.update({
  id: '/statement',
  path: '/statement',
  getParentRoute: () => AuthLoansLoanIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardImport
      parentRoute: typeof AuthImport
    }
    '/_auth/deposits': {
      id: '/_auth/deposits'
      path: '/deposits'
      fullPath: '/deposits'
      preLoaderRoute: typeof AuthDepositsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/loans': {
      id: '/_auth/loans'
      path: '/loans'
      fullPath: '/loans'
      preLoaderRoute: typeof AuthLoansImport
      parentRoute: typeof AuthImport
    }
    '/_auth/notifications': {
      id: '/_auth/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof AuthNotificationsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/pending-requests': {
      id: '/_auth/pending-requests'
      path: '/pending-requests'
      fullPath: '/pending-requests'
      preLoaderRoute: typeof AuthPendingRequestsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthImport
    }
    '/_auth/transactions': {
      id: '/_auth/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof AuthTransactionsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/loans_/$loanId': {
      id: '/_auth/loans_/$loanId'
      path: '/loans/$loanId'
      fullPath: '/loans/$loanId'
      preLoaderRoute: typeof AuthLoansLoanIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/loans_/new': {
      id: '/_auth/loans_/new'
      path: '/loans/new'
      fullPath: '/loans/new'
      preLoaderRoute: typeof AuthLoansNewImport
      parentRoute: typeof AuthImport
    }
    '/_auth/loans_/$loanId/statement': {
      id: '/_auth/loans_/$loanId/statement'
      path: '/statement'
      fullPath: '/loans/$loanId/statement'
      preLoaderRoute: typeof AuthLoansLoanIdStatementImport
      parentRoute: typeof AuthLoansLoanIdImport
    }
  }
}

// Create and export the route tree

interface AuthLoansLoanIdRouteChildren {
  AuthLoansLoanIdStatementRoute: typeof AuthLoansLoanIdStatementRoute
}

const AuthLoansLoanIdRouteChildren: AuthLoansLoanIdRouteChildren = {
  AuthLoansLoanIdStatementRoute: AuthLoansLoanIdStatementRoute,
}

const AuthLoansLoanIdRouteWithChildren = AuthLoansLoanIdRoute._addFileChildren(
  AuthLoansLoanIdRouteChildren,
)

interface AuthRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRoute
  AuthDepositsRoute: typeof AuthDepositsRoute
  AuthLoansRoute: typeof AuthLoansRoute
  AuthNotificationsRoute: typeof AuthNotificationsRoute
  AuthPendingRequestsRoute: typeof AuthPendingRequestsRoute
  AuthProfileRoute: typeof AuthProfileRoute
  AuthTransactionsRoute: typeof AuthTransactionsRoute
  AuthLoansLoanIdRoute: typeof AuthLoansLoanIdRouteWithChildren
  AuthLoansNewRoute: typeof AuthLoansNewRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardRoute: AuthDashboardRoute,
  AuthDepositsRoute: AuthDepositsRoute,
  AuthLoansRoute: AuthLoansRoute,
  AuthNotificationsRoute: AuthNotificationsRoute,
  AuthPendingRequestsRoute: AuthPendingRequestsRoute,
  AuthProfileRoute: AuthProfileRoute,
  AuthTransactionsRoute: AuthTransactionsRoute,
  AuthLoansLoanIdRoute: AuthLoansLoanIdRouteWithChildren,
  AuthLoansNewRoute: AuthLoansNewRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthDashboardRoute
  '/deposits': typeof AuthDepositsRoute
  '/loans': typeof AuthLoansRoute
  '/notifications': typeof AuthNotificationsRoute
  '/pending-requests': typeof AuthPendingRequestsRoute
  '/profile': typeof AuthProfileRoute
  '/transactions': typeof AuthTransactionsRoute
  '/loans/$loanId': typeof AuthLoansLoanIdRouteWithChildren
  '/loans/new': typeof AuthLoansNewRoute
  '/loans/$loanId/statement': typeof AuthLoansLoanIdStatementRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthDashboardRoute
  '/deposits': typeof AuthDepositsRoute
  '/loans': typeof AuthLoansRoute
  '/notifications': typeof AuthNotificationsRoute
  '/pending-requests': typeof AuthPendingRequestsRoute
  '/profile': typeof AuthProfileRoute
  '/transactions': typeof AuthTransactionsRoute
  '/loans/$loanId': typeof AuthLoansLoanIdRouteWithChildren
  '/loans/new': typeof AuthLoansNewRoute
  '/loans/$loanId/statement': typeof AuthLoansLoanIdStatementRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/dashboard': typeof AuthDashboardRoute
  '/_auth/deposits': typeof AuthDepositsRoute
  '/_auth/loans': typeof AuthLoansRoute
  '/_auth/notifications': typeof AuthNotificationsRoute
  '/_auth/pending-requests': typeof AuthPendingRequestsRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/_auth/transactions': typeof AuthTransactionsRoute
  '/_auth/loans_/$loanId': typeof AuthLoansLoanIdRouteWithChildren
  '/_auth/loans_/new': typeof AuthLoansNewRoute
  '/_auth/loans_/$loanId/statement': typeof AuthLoansLoanIdStatementRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/dashboard'
    | '/deposits'
    | '/loans'
    | '/notifications'
    | '/pending-requests'
    | '/profile'
    | '/transactions'
    | '/loans/$loanId'
    | '/loans/new'
    | '/loans/$loanId/statement'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/dashboard'
    | '/deposits'
    | '/loans'
    | '/notifications'
    | '/pending-requests'
    | '/profile'
    | '/transactions'
    | '/loans/$loanId'
    | '/loans/new'
    | '/loans/$loanId/statement'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/_auth/dashboard'
    | '/_auth/deposits'
    | '/_auth/loans'
    | '/_auth/notifications'
    | '/_auth/pending-requests'
    | '/_auth/profile'
    | '/_auth/transactions'
    | '/_auth/loans_/$loanId'
    | '/_auth/loans_/new'
    | '/_auth/loans_/$loanId/statement'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/dashboard",
        "/_auth/deposits",
        "/_auth/loans",
        "/_auth/notifications",
        "/_auth/pending-requests",
        "/_auth/profile",
        "/_auth/transactions",
        "/_auth/loans_/$loanId",
        "/_auth/loans_/new"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/dashboard": {
      "filePath": "_auth/dashboard.tsx",
      "parent": "/_auth"
    },
    "/_auth/deposits": {
      "filePath": "_auth/deposits.tsx",
      "parent": "/_auth"
    },
    "/_auth/loans": {
      "filePath": "_auth/loans.tsx",
      "parent": "/_auth"
    },
    "/_auth/notifications": {
      "filePath": "_auth/notifications.tsx",
      "parent": "/_auth"
    },
    "/_auth/pending-requests": {
      "filePath": "_auth/pending-requests.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile": {
      "filePath": "_auth/profile.tsx",
      "parent": "/_auth"
    },
    "/_auth/transactions": {
      "filePath": "_auth/transactions.tsx",
      "parent": "/_auth"
    },
    "/_auth/loans_/$loanId": {
      "filePath": "_auth/loans_.$loanId.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/loans_/$loanId/statement"
      ]
    },
    "/_auth/loans_/new": {
      "filePath": "_auth/loans_.new.tsx",
      "parent": "/_auth"
    },
    "/_auth/loans_/$loanId/statement": {
      "filePath": "_auth/loans_.$loanId.statement.tsx",
      "parent": "/_auth/loans_/$loanId"
    }
  }
}
ROUTE_MANIFEST_END */
